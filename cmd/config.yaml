AppDebug: true   # 设置程序所处的模式，debug=true 调试模式，日志优先显示在控制台， debug=false 非调试模式，将写入日志文件

HttpServer:
  Api:
    Port: ":8080"                 # 门户网站类端口,注意前面有冒号
  Web:
    Port: ":8088"                 # 后端应用类端口,注意前面有冒号
  AllowCrossDomain: true           # 是否允许跨域，默认 允许，更多关于跨域的介绍从参考：https://www.yuque.com/xiaofensinixidaouxiang/bkfhct/kxddzd
  TrustProxies:                    # 设置gin可以信任的代理服务器(例如 nginx 前置代理服务器),详情参见文档：https://www.yuque.com/xiaofensinixidaouxiang/bkfhct/vmobe7
    IsOpen: 0                       # 可选值（0 或者 1）,如果 go 服务是被 nginx 代理，建议该值设置为 1，将 nginx 代理及机器的ip添加到 ProxyServerList 列表
#    ProxyServerList:
#      - "192.168.10.1"             # nginx 代理服务器ip地址
  IPLimit:
    Count: 15000 # 限流个数
    Time: 3600 # 限流时间
  TLS:
    Enabled: false
    Key: "key"
    Cert: ""


Token:
  JwtTokenSignKey: "www.heqiaomu123.cn"    #设置token生成时加密的签名
  JwtTokenOnlineUsers: 10          #一个账号密码允许最大获取几个有效的token，当超过这个值，第一次获取的token的账号、密码就会失效
  JwtTokenCreatedExpireAt: 28800   #创建时token默认有效秒数（token生成时间加上该时间秒数，算做有效期）,3600*8=28800 等于8小时
  JwtTokenRefreshAllowSec: 86400   #对于过期的token，允许在多少小时之内刷新，超过此时间则不允许刷新换取新token，86400=3600*24，即token过期24小时之内允许换新token
  JwtTokenRefreshExpireAt: 36000   #对于过期的token，支持从相关接口刷新获取新的token，它有效期为10个小时，3600*10=36000 等于10小时
  BindContextKeyName: "userToken"  #用户在 header 头部提交的token绑定到上下文时的键名，方便直接从上下文(gin.context)直接获取每个用户的id等信息
  IsCacheToRedis: 0                #用户token是否缓存到redis, 如果已经正确配置了redis,建议设置为1, 开启redis缓存token，（1=用户token缓存到redis; 0=token只存在于mysql）


Redis:
  Host: "127.0.0.1"
  Port: 6379
  Auth: ""
  MaxIdle: 10
  MaxActive: 1000
  IdleTimeout: 60
  IndexDb: 1              # 注意 redis 默认连接的是 1 号数据库，不是 0号数据库
  ConnFailRetryTimes: 3    #从连接池获取连接失败，最大重试次数
  ReConnectInterval: 1     # 从连接池获取连接失败，每次重试之间间隔的秒数

Logs:
  GinLogName: "/storage/logs/gin.glog"                  # 设置 gin 框架的接口访问日志
  GoSkeletonLogName: "/storage/logs/server.glog"    # 设置GoSkeleton项目骨架运行时日志文件名，注意该名称不要与上一条重复 ,避免和 gin 框架的日志掺杂一起，造成混乱。
  TextFormat: "json"                                   # 记录日志的格式，参数选项：console、json ， console 表示一般的文本格式
  TimePrecision: "millisecond"                         # 记录日志时，相关的时间精度，该参数选项：second  、 millisecond ， 分别表示 秒 和 毫秒 ,默认为毫秒级别
  Prefix: "[github.com/Heqiaomu/goweb/server]"
  MaxSize: 10                                          # 每个日志的最大尺寸(以MB为单位）， 超过该值，系统将会自动进行切割
  MaxBackups: 7                                        # 保留旧日志最大个数
  MaxAge: 15                                           # 保留旧日志最大天数
  EncodeLevel: CapitalLevelEncoder
  FileMaxBackups: stacktrace
  FileMaxAge: true
  Compress: false

Websocket:
  Enabled: false
  WriteReadBufferSize: 20480
  MaxMessageSize: 65535
  PingPeriod: 20
  HeartbeatFailMaxTimes: 4
  ReadDeadline: 100
  WriteDeadline: 35

SnowFlake:
  SnowFlakeMachineId: 2

# casbin 权限控制api接口
Casbin:
  IsInit: 0
  AutoLoadPolicySeconds: 5
  TablePrefix: "tb"
  TableName: "auth_casbin_rule"
  ModelConfig: |
    [request_definition]
    r = sub, obj, act
    [policy_definition]
    p = sub, obj, act
    [role_definition]
    g = _ , _
    [policy_effect]
    e = some(where (p.eft == allow))
    [matchers]
    m = (g(r.sub, p.sub) || p.sub == "*" ) && keyMatch(r.obj , p.obj) && (r.act == p.act || p.act == "*")

#验证码(包括中间件)配置信息
Captcha:
  CaptchaId: "captcha_id"
  CaptchaValue: "captcha_value"
  Length: 6

FileUploadSetting:
  Size: 32
  UploadFileField: "file"
  UploadFileSavePath: "/storage/app/uploaded/"
  UploadFileReturnPath: "/public/storage/uploaded/"
  UploadOSSTyper: Local
  AllowMimeType: #允许的文件mime类型列表
    - "image/jpeg"                    #jpg、jpeg图片格式
    - "image/png"                     #png图片格式
    - "image/x-icon"                  #ico图片
    - "image/bmp"                     #bmp图片
    - "application/zip"               #xlsx、docx、zip
    - "application/x-gzip"            #tar.gz
    - "text/plain; charset=utf-8"     #txt glog json等文本文件
    - "video/mp4"      #视频文件，例如：mp4
    - "audio/mpeg"     #音频文件，例如: mp3
  OSS:
    Local:
      Path: "/public/storage/uploaded/"
      StorePath: "/storage/app/uploaded/"

Database: # 只针对 gorm  操作数据库有效
  UseDbType: "mysql"  # 备选项 mysql 、sqlserver、 postgresql
  SlowThreshold: 30 # 慢SQL记录调减
  Mysql:
    LogMode: "Silent"
    Write:
      Host: "192.168.31.170"
      DataBase: "db_qingfeng"
      Port: 3306
      Prefix: "tb_"
      User: "root"
      Pass: "123456"
      Charset: "utf8mb4"
      SetMaxIdleConns: 10
      SetMaxOpenConns: 128
      SetConnMaxLifetime: 60
      ReConnectInterval: 1
      PingFailRetryTimes: 3
    Read:
      Host: "192.168.31.170"
      DataBase: "db_qingfeng"
      Port: 3306
      Prefix: "tb_"
      User: "root"
      Pass: "123456"
      Charset: "utf8mb4"
      SetMaxIdleConns: 10
      SetMaxOpenConns: 128
      SetConnMaxLifetime: 60
